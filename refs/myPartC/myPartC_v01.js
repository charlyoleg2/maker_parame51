// Generated by Parametrix

const { polygon } = require('@jscad/modeling').primitives;
//const { subtract } = require('@jscad/modeling').booleans;
//const { union, intersect, scission, subtract } = require('@jscad/modeling').booleans;
const { union, intersect, subtract } = require('@jscad/modeling').booleans;
const { extrudeLinear, extrudeRotate } = require('@jscad/modeling').extrusions;
const { translate, rotate } = require('@jscad/modeling').transforms;

const main = () => {

const ctr_face_fig_myPartC_faceBodyCut_Fa000_Ctr000 = polygon({ points: [ [ -50.0000, 0.0000 ],
	[ -50.0000, 100.0000 ],
	[ -20.0000, 200.0000 ],
	[ -20.0000, 180.0000 ],
	[ -50.0000, 0.0000 ] ] });

face_fig_myPartC_faceBodyCut_Fa000 = ctr_face_fig_myPartC_faceBodyCut_Fa000_Ctr000;
fig_myPartC_faceBodyCut = face_fig_myPartC_faceBodyCut_Fa000;
const ctr_face_fig_myPartC_faceBodySlant_Fa000_Ctr000 = polygon({ points: [ [ -50.0000, 0.0000 ],
	[ -50.0000, 200.0000 ],
	[ 50.0000, 200.0000 ],
	[ 50.0000, 40.0000 ],
	[ -50.0000, 0.0000 ] ] });

face_fig_myPartC_faceBodySlant_Fa000 = ctr_face_fig_myPartC_faceBodySlant_Fa000_Ctr000;
fig_myPartC_faceBodySlant = face_fig_myPartC_faceBodySlant_Fa000;
const ctr_face_fig_myPartC_faceBodyHollow_Fa000_Ctr000 = polygon({ points: [ [ -50.0000, 0.0000 ],
	[ -20.0000, 180.0000 ],
	[ -20.0000, 200.0000 ],
	[ 0.0000, 200.0000 ],
	[ 0.0000, 0.0000 ],
	[ -50.0000, 0.0000 ] ] });

face_fig_myPartC_faceBodyHollow_Fa000 = ctr_face_fig_myPartC_faceBodyHollow_Fa000_Ctr000;
fig_myPartC_faceBodyHollow = face_fig_myPartC_faceBodyHollow_Fa000;
const ctr_face_fig_myPartC_faceChimney_Fa000_Ctr000 = polygon({ points: [ [ 25.0000, 75.0000 ],
	[ 24.9210, 76.9863 ],
	[ 24.6844, 78.9600 ],
	[ 24.2917, 80.9086 ],
	[ 23.7455, 82.8199 ],
	[ 23.0491, 84.6818 ],
	[ 22.2071, 86.4824 ],
	[ 21.2246, 88.2105 ],
	[ 20.1079, 89.8550 ],
	[ 18.8641, 91.4056 ],
	[ 17.5011, 92.8525 ],
	[ 16.0273, 94.1866 ],
	[ 14.4523, 95.3993 ],
	[ 12.7859, 96.4830 ],
	[ 11.0386, 97.4310 ],
	[ 9.2216, 98.2371 ],
	[ 7.3463, 98.8963 ],
	[ 5.4245, 99.4044 ],
	[ 3.4684, 99.7582 ],
	[ 1.4904, 99.9555 ],
	[ -0.4971, 99.9951 ],
	[ -2.4813, 99.8766 ],
	[ -4.4499, 99.6008 ],
	[ -6.3904, 99.1695 ],
	[ -8.2905, 98.5853 ],
	[ -10.1381, 97.8521 ],
	[ -11.9217, 96.9744 ],
	[ -13.6299, 95.9577 ],
	[ -15.2519, 94.8086 ],
	[ -16.7775, 93.5342 ],
	[ -18.1970, 92.1426 ],
	[ -19.5014, 90.6427 ],
	[ -20.6826, 89.0439 ],
	[ -21.7330, 87.3562 ],
	[ -22.6460, 85.5905 ],
	[ -23.4158, 83.7578 ],
	[ -24.0376, 81.8697 ],
	[ -24.5074, 79.9382 ],
	[ -24.8223, 77.9755 ],
	[ -24.9802, 75.9939 ],
	[ -24.9802, 74.0061 ],
	[ -24.8223, 72.0245 ],
	[ -24.5074, 70.0618 ],
	[ -24.0376, 68.1303 ],
	[ -23.4158, 66.2422 ],
	[ -22.6460, 64.4095 ],
	[ -21.7330, 62.6438 ],
	[ -20.6826, 60.9561 ],
	[ -19.5014, 59.3573 ],
	[ -18.1970, 57.8574 ],
	[ -16.7775, 56.4658 ],
	[ -15.2519, 55.1914 ],
	[ -13.6299, 54.0423 ],
	[ -11.9217, 53.0256 ],
	[ -10.1381, 52.1479 ],
	[ -8.2905, 51.4147 ],
	[ -6.3904, 50.8305 ],
	[ -4.4499, 50.3992 ],
	[ -2.4813, 50.1234 ],
	[ -0.4971, 50.0049 ],
	[ 1.4904, 50.0445 ],
	[ 3.4684, 50.2418 ],
	[ 5.4245, 50.5956 ],
	[ 7.3463, 51.1037 ],
	[ 9.2216, 51.7629 ],
	[ 11.0386, 52.5690 ],
	[ 12.7859, 53.5170 ],
	[ 14.4523, 54.6007 ],
	[ 16.0273, 55.8134 ],
	[ 17.5011, 57.1475 ],
	[ 18.8641, 58.5944 ],
	[ 20.1079, 60.1450 ],
	[ 21.2246, 61.7895 ],
	[ 22.2071, 63.5176 ],
	[ 23.0491, 65.3182 ],
	[ 23.7455, 67.1801 ],
	[ 24.2917, 69.0914 ],
	[ 24.6844, 71.0400 ],
	[ 24.9210, 73.0137 ],
	[ 25.0000, 75.0000 ] ] });

face_fig_myPartC_faceChimney_Fa000 = ctr_face_fig_myPartC_faceChimney_Fa000_Ctr000;
fig_myPartC_faceChimney = face_fig_myPartC_faceChimney_Fa000;
const ctr_face_fig_myPartC_faceChimneyHollow_Fa000_Ctr000 = polygon({ points: [ [ 15.0000, 75.0000 ],
	[ 14.8717, 76.9579 ],
	[ 14.4889, 78.8823 ],
	[ 13.8582, 80.7403 ],
	[ 12.9904, 82.5000 ],
	[ 11.9003, 84.1314 ],
	[ 10.6066, 85.6066 ],
	[ 9.1314, 86.9003 ],
	[ 7.5000, 87.9904 ],
	[ 5.7403, 88.8582 ],
	[ 3.8823, 89.4889 ],
	[ 1.9579, 89.8717 ],
	[ 0.0000, 90.0000 ],
	[ -1.9579, 89.8717 ],
	[ -3.8823, 89.4889 ],
	[ -5.7403, 88.8582 ],
	[ -7.5000, 87.9904 ],
	[ -9.1314, 86.9003 ],
	[ -10.6066, 85.6066 ],
	[ -11.9003, 84.1314 ],
	[ -12.9904, 82.5000 ],
	[ -13.8582, 80.7403 ],
	[ -14.4889, 78.8823 ],
	[ -14.8717, 76.9579 ],
	[ -15.0000, 75.0000 ],
	[ -14.8717, 73.0421 ],
	[ -14.4889, 71.1177 ],
	[ -13.8582, 69.2597 ],
	[ -12.9904, 67.5000 ],
	[ -11.9003, 65.8686 ],
	[ -10.6066, 64.3934 ],
	[ -9.1314, 63.0997 ],
	[ -7.5000, 62.0096 ],
	[ -5.7403, 61.1418 ],
	[ -3.8823, 60.5111 ],
	[ -1.9579, 60.1283 ],
	[ -0.0000, 60.0000 ],
	[ 1.9579, 60.1283 ],
	[ 3.8823, 60.5111 ],
	[ 5.7403, 61.1418 ],
	[ 7.5000, 62.0096 ],
	[ 9.1314, 63.0997 ],
	[ 10.6066, 64.3934 ],
	[ 11.9003, 65.8686 ],
	[ 12.9904, 67.5000 ],
	[ 13.8582, 69.2597 ],
	[ 14.4889, 71.1177 ],
	[ 14.8717, 73.0421 ],
	[ 15.0000, 75.0000 ] ] });

face_fig_myPartC_faceChimneyHollow_Fa000 = ctr_face_fig_myPartC_faceChimneyHollow_Fa000_Ctr000;
fig_myPartC_faceChimneyHollow = face_fig_myPartC_faceChimneyHollow_Fa000;

const subpax_myPartC_bodyRaw =
	translate( [ 0, 0, 0, ],
		rotate( [ 0, 0, 0, ],
			   extrudeRotate( {segments: 32}, fig_myPartC_faceBodyCut )
		)
	);


const subpax_myPartC_bodySlant =
	translate( [ 50, 0, 0, ],
		rotate( [ 1.5707963267948966, 0, -1.5707963267948966, ],
			   extrudeLinear( {height: 100}, fig_myPartC_faceBodySlant )
		)
	);


const subpax_myPartC_bodyH =
	translate( [ 0, 0, 0, ],
		rotate( [ 0, 0, 0, ],
			   extrudeRotate( {segments: 32}, fig_myPartC_faceBodyHollow )
		)
	);


const subpax_myPartC_chimney =
	translate( [ 0, 0, 0, ],
		rotate( [ 1.5707963267948966, 0, 0, ],
			   extrudeLinear( {height: 100}, fig_myPartC_faceChimney )
		)
	);


const subpax_myPartC_chimneyH =
	translate( [ 0, 0, 0, ],
		rotate( [ 1.5707963267948966, 0, 0, ],
			   extrudeLinear( {height: 100}, fig_myPartC_faceChimneyHollow )
		)
	);

const ipax_myPartC_body1 = intersect( subpax_myPartC_bodyRaw, subpax_myPartC_bodySlant );
const ipax_myPartC_body2 = union( ipax_myPartC_body1, subpax_myPartC_chimney );
const ipax_myPartC_hollow = union( subpax_myPartC_bodyH, subpax_myPartC_chimneyH );
const ipax_myPartC_body3 = subtract( ipax_myPartC_body2, ipax_myPartC_hollow );
const pax_myPartC = ipax_myPartC_body3;

return pax_myPartC;
}
module.exports = { main };
